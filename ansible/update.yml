- hosts: all
  # Rebuilds everything on the host using the existing Dockerfile and setup
  vars_files:
    - ./variables.yml
    - ./secret.yml
  tasks:
    - name: Stop docker
      ansible.builtin.shell:
        cmd: docker compose down
        chdir: "{{dest}}"
    - name: Prune volumes
      ansible.builtin.shell:
        cmd: docker volume prune -f
        chdir: "{{dest}}"
    - name: Rebuild images
      ansible.builtin.shell:
        cmd: docker compose build --no-cache --pull
        chdir: "{{dest}}"
      environment:
        BUILD_CONTEXT: "{{ publisher.build.context }}"
        CONTEXT_PATH: "{{publisher.context_path}}"
    - name: Start docker
      ansible.builtin.shell:
        cmd: docker compose up -d --force-recreate
        chdir: "{{dest}}"
      environment:
        IIIF_IMAGES: "{{iiif.images}}"
    - name: Wait for eXist-db
      ansible.builtin.shell:
        cmd: docker compose exec publisher java org.exist.start.Main client -x 'system:get-version()'
        chdir: "{{dest}}"
      register: result
      until: result.rc == 0
      retries: 5
      delay: 10
      tags:
        - password
    - name: Set app password
      ansible.builtin.shell:
        cmd: docker compose exec publisher java org.exist.start.Main client -x 'sm:passwd("tei", "{{APP_PASSWD}}")'
        chdir: "{{dest}}"
      when: APP_PASSWD is defined and APP_PASSWD != ''
      tags:
        - password
    - name: Set admin password
      ansible.builtin.shell:
        cmd: docker compose exec publisher java org.exist.start.Main client -x 'sm:passwd("admin", "{{ADMIN_PASSWD}}")'
        chdir: "{{dest}}"
      when: ADMIN_PASSWD is defined and ADMIN_PASSWD != ''
      tags:
        - password